---
title: "Data i dialog"
subtitle: "Kommunrapport v2"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://www.ri.se/sv/vad-vi-gor/expertiser/kategoriskt-baserade-matningar
  orcid: 0000-0003-1669-592X
date: last-modified
params:
  fokusKommun: "Vallentuna"
  jmfKommun: "Stockholm"
  years: 2020
format: 
  html:
    toc: true
    toc-depth: 4
    toc-title: "Innehållsförteckning"
    embed-resources: true
    standalone: true
    page-layout: full
    logo: rise_logo_quarto.png
    mainfont: 'Lato'
    monofont: 'Roboto Mono'
    code-overflow: wrap
    code-tools: false
    code-fold: false
    number-sections: true
    fig-dpi: 150
    layout-align: left
    linestretch: 1.6
    theme: materia
    link-external-newwindow: true
execute:
  echo: false
  warning: false
  message: false
  cache: true
editor_options: 
  chunk_output_type: console
---

## `r params$fokusKommun` {.unnumbered}

```{r}

### Parameters are defined externally in the file DIDparameters.xls
# These are read by the script render.R, which in turn generates reports

# which municipality to focus this report on?
fokusKommun <- params$fokusKommun

# which municipalities should be included in comparisons?
jmfKommun <- c(fokusKommun,params$jmfKommun)

# years of interest
yearsIn <- params$years

# setup -------------------------------------------------------------------
library(ggplot2)
library(tidyverse)
library(shiny)
library(arrow)
library(xlsx)

library(ggdist) # for shadeable density slabs
library(ggpp) # for position_dodge2nudge
library(stringr)
library(EnvStats)
library(bslib)
library(formattable)
library(thematic)
library(catR)
library(Hmisc)
library(colorspace) # for modifying color palettes

library(geomtextpath)
library(readxl)
library(rlang)
library(visNetwork)
library(networkD3)
library(RColorBrewer)
library(vctrs)
library(ggiraph)
library(gt)
library(gtExtras)
library(RISEkbmRasch)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

årtal <- c(2006,2008,2010,2012,2014,2016,2018,2020,2022)


### set up color palette based on RISE guidelines
RISEprimGreen <- "#009ca6"
RISEprimRed <- "#e83c63"
RISEprimYellow <- "#ffe500"
RISEprimGreenMid <- "#8dc8c7"
RISEprimRedMid <- "#f5a9ab"
RISEprimYellowMid <- "#ffee8d"
RISEprimGreenLight <- "#ebf5f0"
RISEprimRedLight <- "#fde8df"
RISEprimYellowLight <- "#fff7dd"
RISEcompPurple <- "#482d55"
RISEcompGreenDark <- "#0e4e65"
RISEgrey1 <- "#f0f0f0"
RISEgrey2 <- "#c8c8c8"
RISEgrey3 <- "#828282"
RISEgrey4 <- "#555555"

### colors specifically for DID application
DIDcolorsOriginal <- c('#D55E00','#F0E442','#009E73','#999999')
DIDcolors <- lighten(DIDcolorsOriginal, amount = 0.1, space = "HLS")
DIDred <- "#D55E00"
DIDorange <- "#E69F00"
DIDgreen <- "#009E73"
DIDyellow <- "#F0E442"

DIDtestColors <- c("#509B8E","#E2C578","#DB7358")

RISEpalette1 <- colorRampPalette(colors = c("#009ca6", "#e83c63", "#ffe500"))(6)
#scales::show_col(RISEpalette1)

RISEpalette2 <- colorRampPalette(colors = c("#009ca6", "#482d55", "#e83c63", "#ffe500"))(8)
#scales::show_col(RISEpalette2)

# distance between panels in faceted ggplots
pandist <- 0.6

rfactors <- c('Utagerande','Närsamhälle','Föräldraskap','Psykiska/ psykosomatiska besvär','Vantrivsel i skolan')
pfactors <- c('Välbefinnande','Positiv skolanknytning')

```

```{r}
# preprocess data
source("setupDIDreport.R")
# import functions to create figures and tables
source("DIDreportFunctions.R")
```

## Demografi

För att se exakta antal i figurerna går det att använda muspekaren på respektive punkt.

::: panel-tabset
### Fördelat på kön
```{r}
responsesGender <- df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kön) %>% 
  reframe(Antal = n()) %>% 
  ggplot(aes(x = År, y = Antal, color = Kön)) + 
  geom_line(linewidth = 1) +
  geom_point_interactive(aes(tooltip = Antal),
                         size = 3) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  scale_x_continuous(guide = guide_axis(n.dodge = 1), breaks = årtal) +
  scale_y_continuous(limits = c(0,NA)) +
  labs(title = "Antal respondenter per år",
       subtitle = "Fördelat på kön") +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

girafe(ggobj = responsesGender)

```
### Fördelat på årskurs
```{r}
responsesARSKURS <- df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>",
         !is.na(ARSKURS)) %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Årskurs) %>% 
  reframe(Antal = n()) %>% 
  ggplot(aes(x = År, y = Antal, color = Årskurs)) + 
  geom_line(linewidth = 1) +
  geom_point_interactive(aes(tooltip = Antal),
                         size = 3) +
  #scale_color_brewer(type = "qual", palette = "Dark2") +
  scale_x_continuous(guide = guide_axis(n.dodge = 1), breaks = årtal) +
  scale_y_continuous(limits = c(0,NA)) +
  labs(title = "Antal respondenter per år",
       subtitle = "Fördelat på årskurs") +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

girafe(ggobj = responsesARSKURS)

```
### Otillräckliga svar
Det krävs svar på minst 5 frågor inom ett index för att ett indexvärde ska beräknas. Här redovisas hur stor andel av de som svarat på Stockholmsenkäten som har 0-4 frågor besvarade inom varje index.
```{r}
otillr <- df.risk %>%
  filter(is.na(riskLevel)) %>%
  filter(Kommun == fokusKommun) %>%
  ggplot(aes(x = År, y = Andel, group = Index, color = Index)) +
  geom_line(linewidth = 0.8) +
  geom_point_interactive(aes(tooltip = Andel),
                         size = 2.5) +
  ylab("Andel i %") +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

girafe(ggobj = otillr)

```
### Vistelsetid
```{r}
stapelDemografi("Hur länge har du bott i Sverige?")
```
### Utbildningsnivå föräldrar
```{r}
stapelDemografi("Vilken högsta utbildning har din mamma/pappa?")
```

### Boendetyp
```{r}
stapelDemografi("Vad bor du i för typ av bostad?")
```

### Jämfört med andra

```{r}
responsesKommuner <- df %>% 
  filter(Kommun %in% jmfKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kommun) %>% 
  reframe(Antal = n()) %>% 
  ggplot(aes(x = År, y = Antal, group = Kommun, color = Kommun)) + 
  geom_line(linewidth = 1) +
  geom_point_interactive(aes(tooltip = Antal),
                         size = 2.5) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  scale_x_continuous(guide = guide_axis(n.dodge = 1), breaks = årtal) +
  scale_y_continuous(limits = c(0,2000)) +
  labs(title = "Antal respondenter per år",
       subtitle = "Fördelat på kommun") +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )

girafe(ggobj = responsesKommuner)

```

### Tabeller
```{r}
#| layout-ncol: 2
#| include: true
#| 

df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kön) %>% 
  reframe(`Antal respondenter` = n()) %>% 
  gt(.,
   groupname_col = "År") %>% 
  gt_theme_espn() %>% 
  tab_options(table.font.name = "Lato",
              heading.align = "left") %>% 
  cols_align(align = "right")

df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kön,Årskurs) %>% 
  reframe(`Antal respondenter` = n()) %>% 
  gt(.,
   groupname_col = c("År","Årskurs")) %>% 
  gt_theme_espn() %>% 
  tab_options(table.font.name = "Lato",
              heading.align = "left") %>% 
  cols_align(align = "right",
             columns = "Kön")
```
:::

## Överblick 

### Snirkel

::: panel-tabset
#### 2022
```{r}
DIDsnirkel(2022)
```
#### 2020
```{r}
DIDsnirkel(2020)
```
#### 2018
```{r}
DIDsnirkel(2018)
```
#### 2016
```{r}
DIDsnirkel(2016)
```
#### Samlade
```{r}

# snirkelplot
years <- c(2016,2018,2020,2022)

df.risk %>%
  filter(Kommun == fokusKommun) %>%
  filter(År %in% years) %>%
  filter(!Index %in% c("Välbefinnande", "Positiv skolanknytning")) %>%
    mutate(riskLevel = car::recode(riskLevel,"NA='För få svar';
                                   'Medelhög risk'='Något förhöjd risk';
                                   'Hög risk'='Förhöjd risk'")) %>% 
    mutate(Risknivå = factor(riskLevel, levels = c("För få svar", "Låg risk", "Något förhöjd risk", "Förhöjd risk"))) %>% 
    ggplot(aes(x = Index, y = Andel, fill = Risknivå)) +
    geom_col(alpha = 0.95) +
    geom_textpath(aes(label = Index, group = Index),
                  text_only = T,
                  position = "stack",
                  hjust = 0,
                  size = 2
    ) +
    coord_polar(theta = "y") +
    scale_fill_manual(values = DIDcolorsGGYR) +
  theme_bw() +
  scale_x_discrete(
    expand = expansion(add = c(3, 0)),
    limits = rev,
    labels = NULL
  ) +
  scale_y_continuous(
    breaks = seq(0, 90, 10),
    labels = paste0(seq(0, 90, 10), "%"),
  ) +
  labs(title = paste0(fokusKommun)) +
  geom_texthline(
    yintercept = 10, color = "black",
    linetype = 2, size = 1, alpha = 0.6,
    label = "Hög risk",
    hjust = 0.05
  ) +
  geom_texthline(
    yintercept = 30, color = RISEprimRed,
    linetype = 2, size = 1, alpha = 0.6,
    label = "Medelhög risk",
    hjust = 0.15
  ) +
  xlab("") +
  ylab("") +
  facet_wrap(~År) +
  theme_minimal() +
  theme_rise()
```
:::

### Stapel

::: panel-tabset
#### 2022
```{r}
DIDstapel(df.risk, "2022")
```
#### 2020
```{r}
DIDstapel(df.risk, "2020")
```
#### 2018
```{r}
DIDstapel(df.risk, "2018")
```
#### 2016
```{r}
DIDstapel(df.risk, "2016")
```
:::

### Stapel uppdelat

::: panel-tabset
#### 2022
```{r}
df.risk.gender %>% 
  filter(!is.na(Kön)) %>% 
  DIDstapel("2022") +
  facet_wrap(~Kön)
```

```{r}
df.risk.gender.arskurs %>% 
  filter(!is.na(Årskurs)) %>% 
  DIDstapel("2022") +
  facet_grid(Årskurs~Kön)
```

#### 2020
```{r}
df.risk.gender %>% 
  filter(!is.na(Kön)) %>% 
  DIDstapel("2020") +
  facet_wrap(~Kön)
```

```{r}
df.risk.gender.arskurs %>% 
  filter(!is.na(Årskurs)) %>% 
  DIDstapel("2020") +
  facet_grid(Årskurs~Kön)
```

#### 2018
```{r}
df.risk.gender %>% 
  filter(!is.na(Kön)) %>% 
  DIDstapel("2018") +
  facet_wrap(~Kön)
```

```{r}
df.risk.gender.arskurs %>% 
  filter(!is.na(Årskurs)) %>% 
  DIDstapel("2018") +
  facet_grid(Årskurs~Kön)
```
#### 2016
```{r}
df.risk.gender %>% 
  filter(!is.na(Kön)) %>% 
  DIDstapel("2016") +
  facet_wrap(~Kön)
```

```{r}
df.risk.gender.arskurs %>% 
  filter(!is.na(Årskurs)) %>% 
  DIDstapel("2016") +
  facet_grid(Årskurs~Kön)
```
:::

## Individnivå

### Riskfaktorer

::: panel-tabset
#### Utagerande
```{r}
DIDareaPlot("Utagerande")
DIDareaPlot2("Utagerande")
DIDline90("Utagerande")
DIDmedelSDg(sums.indexGG, "Utagerande") +
  facet_grid(Årskurs~Kön)
```
#### Psykiska/psykosomatiska besvär
```{r}
DIDareaPlot("Psykiska/ psykosomatiska besvär")
DIDareaPlot2("Psykiska/ psykosomatiska besvär")
DIDline90("Psykiska/ psykosomatiska besvär")
DIDmedelSDg(sums.indexGG, "Psykiska/ psykosomatiska besvär") +
  facet_grid(Årskurs~Kön)
```
#### Tabell
```{r}
### Tabell psykiska/psykosomatiska besvär åk 9

  plotFaktor <- "Psykiska/ psykosomatiska besvär"
  df.plot <- df %>%
    filter(Kommun == fokusKommun) %>%
    mutate(
      Risknivå = case_when(
        .data[[plotFaktor]] < rslimits |>
          select(all_of(plotFaktor)) |>
          slice(1) |>
          pull() ~ "Låg risk",
        .data[[plotFaktor]] >= rslimits |>
          select(all_of(plotFaktor)) |>
          slice(1) |>
          pull() &
          .data[[plotFaktor]] < rslimits |>
            select(all_of(plotFaktor)) |>
            slice(2) |>
            pull() ~ "Något förhöjd risk",
        .data[[plotFaktor]] >= rslimits |>
          select(all_of(plotFaktor)) |>
          slice(2) |>
          pull() ~ "Förhöjd risk",
        TRUE ~ "Otillräckliga svar"
      )
    )

## Table for all years and ARSKURS
#   df.plot %>%
#     filter(Kön %in% c("Pojke", "Flicka")) %>%
#     #filter(ar %in% c()) %>% # allow selection of span of years?
#     mutate(Risknivå = factor(Risknivå, levels = c("Förhöjd risk", "Något förhöjd risk", "Låg risk", "Otillräckliga svar"))) %>%
#     group_by(ar, Kön, ARSKURS) %>%
#     count(Risknivå, .drop = FALSE) %>%
#     mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>% 
#     rename(Antal = n) %>% 
#     gt(.,
#    groupname_col = c("ar","ARSKURS","Kön")) %>% 
#   gt_theme_espn() %>% 
#   tab_options(table.font.name = "Lato",
#               container.width = 500,
#               heading.align = "left") %>% 
#   cols_align(align = "right")
  
    df.plot %>%
    filter(Kön %in% c("Pojke", "Flicka")) %>%
    filter(ar %in% c(2016,2018,2020,2022)) %>% # allow selection of span of years?
    filter(ARSKURS == "Åk 9") %>% 
    mutate(Risknivå = factor(Risknivå, levels = c("Förhöjd risk", "Något förhöjd risk", "Låg risk", "Otillräckliga svar"))) %>%
    group_by(ar, Kön) %>%
    count(Risknivå, .drop = FALSE) %>%
    mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>% 
    rename(Antal = n) %>% 
    gt(.,
   groupname_col = c("ar","Kön")) %>% 
  gt_theme_espn() %>% 
  tab_options(table.font.name = "Lato",
              container.width = 500,
              heading.align = "left") %>% 
  cols_align(align = "right")
  
```

#### ANDTS antal
```{r}
#| fig-height: 6
plotFaktor = "Senaste4v"
df %>%
  filter(Kön %in% c("Pojke", "Flicka"),
         !is.na(ARSKURS)) %>%
  select(Senaste4v, ar, Kön, ARSKURS) %>%
  mutate(Senaste4v = recode(Senaste4v,"7:10=6")) %>% 
  mutate(Senaste4v = factor(Senaste4v,
         levels = rev(c(0:6))
         )
         ) %>% 
  #levels = c("Tre gånger eller fler","Två gånger","En gång","Ej använt","Svar saknas"))) %>% 
  group_by(ar, Kön, ARSKURS) %>%
  count(Senaste4v, .drop = FALSE) %>%
  mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>%
  ggplot(aes(x = ar, y = Andel)) +
  geom_area(aes(fill = Senaste4v),
            position = "stack",
            alpha = 0.85
  ) +
  #scale_fill_manual(values = c("#D55E00", "orange", "#F0E442", "#009E73", "lightgrey")) +
  scale_fill_viridis_d() +
  scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100)) +
  scale_x_continuous(breaks = årtal, guide = guide_axis(n.dodge = 2)) +
  xlab("Årtal") +
  ylab("Andel i %") +
  labs(
    title = paste0("Användning senaste 4 veckorna, oviktat index"),
    subtitle = "Antal substanser",
    fill='Antal substanser'
  ) +
  theme_minimal() +
  theme_rise() +
  facet_grid(ARSKURS ~ Kön)
```
#### Separerade på respektive substans

```{r}
# for FNY12020r and F14r (e-cig and smoking)

# ta fram ett indexvärde för bruk under senaste 4v
senaste4v <- c("F14r","F18r","F36new","F49new","FNY12020r")
df <- df %>% 
  mutate(Senaste4v = rowSums(df %>% select(all_of(senaste4v)), na.rm = T))

itemlabelsPlotFaktor <- cbind(senaste4v,
                              c("Rökning","Snus","Alkohol","Narkotika (inkl. cannabis)","E-cigaretter")) %>% 
  as.data.frame() %>% 
  rename(itemnr = senaste4v,
         item = V2)
  

andtsUseShare <- function(andts) {
  plotFaktor <- andts
  plotFaktorName <- itemlabelsPlotFaktor %>% 
    filter(itemnr == plotFaktor) %>% 
    pull(item)
  
  df %>%
    filter(Kön %in% c("Pojke", "Flicka"),
           !is.na(ARSKURS),
           Kommun == fokusKommun) %>%
    select(all_of(senaste4v), ar, Kön, ARSKURS) %>%
    mutate(
      bruk4v = case_when(
        .data[[plotFaktor]] == 0 ~ "Ej använt",
        .data[[plotFaktor]] == 1 ~ "Ibland men inte varje dag",
        .data[[plotFaktor]] == 2 ~ "Dagligen",
        TRUE ~ "Svar saknas"
      )
    ) %>% 
    mutate(bruk4v = factor(bruk4v, levels = c("Dagligen","Ibland men inte varje dag","Ej använt","Svar saknas"))) %>% 
    group_by(ar, Kön, ARSKURS) %>%
    count(bruk4v, .drop = FALSE) %>%
    mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>%
    ggplot(aes(x = ar, y = Andel)) +
    geom_area(aes(fill = bruk4v),
      position = "stack",
      alpha = 0.9
    ) +
    scale_fill_manual(values = DIDcolorsRYGG) +
    scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100)) +
    scale_x_continuous(breaks = årtal, guide = guide_axis(n.dodge = 2)) +
    xlab("Årtal") +
    ylab("Andel i %") +
    theme_minimal() +
    theme_rise() +
    labs(
      title = paste0(plotFaktorName),
      subtitle = fokusKommun
    ) +
    facet_grid(ARSKURS ~ Kön)
}
```

```{r}
andtsUseShare("F14r")
andtsUseShare("F18r")
```

```{r}
# for f36r and F49r
andtsUseShare2 <- function(andts) {
  plotFaktor <- andts
  plotFaktorName <- itemlabelsPlotFaktor %>% 
    filter(itemnr == plotFaktor) %>% 
    pull(item)
  
  df %>%
    filter(Kön %in% c("Pojke", "Flicka"),
           !is.na(ARSKURS),
           Kommun == fokusKommun) %>%
    select(all_of(senaste4v), ar, Kön, ARSKURS) %>%
    mutate(
      bruk4v = case_when(
        .data[[plotFaktor]] == 0 ~ "Ej använt",
        .data[[plotFaktor]] == 1 ~ "En gång",
        .data[[plotFaktor]] == 2 ~ "Två gånger",
        .data[[plotFaktor]] == 3 ~ "Tre gånger eller fler",
        TRUE ~ "Svar saknas"
      )
    ) %>% 
    mutate(bruk4v = factor(bruk4v, levels = c("Tre gånger eller fler","Två gånger","En gång","Ej använt","Svar saknas"))) %>% 
    group_by(ar, Kön, ARSKURS) %>%
    count(bruk4v, .drop = FALSE) %>%
    mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>%
    ggplot(aes(x = ar, y = Andel)) +
    geom_area(aes(fill = bruk4v),
      position = "stack",
      alpha = 0.85
    ) +
    scale_fill_manual(values = c("#D55E00", "orange", "#F0E442", "#009E73", "lightgrey")) +
    scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100)) +
    scale_x_continuous(breaks = årtal, guide = guide_axis(n.dodge = 2)) +
    xlab("Årtal") +
    ylab("Andel i %") +
    theme_minimal() +
    theme_rise() +
    labs(
      title = paste0(plotFaktorName, ", användning senaste 4 veckorna"),
      subtitle = fokusKommun
    ) +
    facet_grid(ARSKURS ~ Kön)
}
```

```{r}
andtsUseShare2("F36new")
andtsUseShare2("F49new")
```
#### Debutålder substansanvändning
```{r}
itemsANDTSdebut <- c("F16","F20","F37","F44","F51")

df %>%
  filter(ARSKURS == "Gy 2",
         Kön %in% c("Pojke","Flicka")) %>%
  mutate(across(itemsANDTSdebut, ~ recode(.x, "0=11;1=12;2=13;3=14;4=15;5=16;6=17;7=18"))) %>% 
  select(all_of(c(itemsANDTSdebut,"ARSKURS","ar","Kön"))) %>%
  pivot_longer(itemsANDTSdebut) %>%
  rename(Item = name,
         Ålder = value,
         Årskurs = ARSKURS) %>%
  filter(!is.na(Ålder)) %>% 
  mutate(År = factor(ar)) %>% #group_by(År,Årskurs) %>% count(Kön)
  group_by(År,Kön,Item) %>% 
  summarise(
    Medelvärde = mean(Ålder),
    SD = sd(Ålder)
  ) %>% 
  ggplot(aes(x = År, y = Medelvärde, group = Item, color = Item)) +
  geom_point(size = 3) +
  geom_line(linewidth = 1.1) +
  geom_ribbon(aes(ymin = Medelvärde - SD, ymax = Medelvärde + SD, fill = Item, color = NULL), alpha = 0.05) +
  #scale_color_viridis_d(begin = 0.1) +
  scale_x_discrete(breaks = årtal,
                   guide = guide_axis(n.dodge = 2)) +
  labs(title = "Genomsnittslig debutålder per substans över tid",
       subtitle = fokusKommun,
       caption = "F16 = rökning, F20 = snus, F37 = alkohol, F44 sniffning, F51 = narkotika"
       ) +
  facet_grid(~Kön) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  theme_minimal() +
  theme_rise()
```

#### Utsatt för brott
```{r}

```

:::

### Skyddsfaktorer

### Välbefinnande
```{r}
DIDmedelSDg(sums.index,"Välbefinnande") + 
  facet_wrap(~Kön)

DIDmedelSDg(sums.indexGG, "Välbefinnande") + 
  facet_grid(Årskurs~Kön)
```



## Familj

### Riskfaktorer

```{r}
DIDareaPlot("Föräldraskap")
DIDareaPlot2("Föräldraskap")
DIDline90("Föräldraskap")
DIDmedelSDg(sums.indexGG, "Föräldraskap") +
  facet_grid(Årskurs~Kön)
```

### Skyddsfaktorer

## Skola

### KOLADA

::: panel-tabset
#### Förskola
```{r}

df.kolada <- KOLADA %>% 
  filter(Kön == "Alla") %>% 
  filter(Kommun %in% jmfKommun) %>% 
  filter(KPI %in% c("Barn 3-5 år inskrivna i förskola, andel (%)",
                    "Heltidstjänster i förskolan med förskollärarexamen, lägeskommun, andel (%)")
  )

ggplot(df.kolada,aes(x = År, y = Andel, group = Kommun, color = Kommun)) +
  geom_line(alpha = 0.5, 
            linewidth = 0.8) +
  geom_point(alpha = 0.5, 
             size = 2) +
  geom_line(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  geom_point(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  facet_wrap(~KPI,
             ncol = 4,
             scales = "free",
             labeller = labeller(KPI = label_wrap_gen(25))) +
  theme_minimal() +
  theme_rise()
```

#### Grundskola
```{r}
#| fig-height: 8
df.kolada <- KOLADA %>% 
  filter(Kön == "Alla") %>% 
  filter(Kommun %in% jmfKommun) %>% 
  filter(KPI %in% c("Lärare med pedagogisk högskoleexamen i grundskola åk 1-9, lägeskommun, andel (%)",
                    "Lärare (heltidstjänster) med lärarlegitimation och behörighet i minst ett ämne i grundskola åk 1-9, lägeskommun, andel (%)",
                    "Elever i åk 9 som är behöriga till yrkesprogram, hemkommun, andel (%)")
  )

ggplot(df.kolada,aes(x = År, y = Andel, group = Kommun, color = Kommun)) +
  geom_line(alpha = 0.5, linewidth = 0.8) +
  geom_point(alpha = 0.5, size = 2) +
  geom_line(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  geom_point(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  ylab("Andel i %") +
  xlab("") +
  facet_wrap(~KPI,
             ncol = 2,
             nrow = 2,
             scales = "free",
             labeller = labeller(KPI = label_wrap_gen(22))) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
#### Gymnasie
```{r}
#| fig-height: 8
df.kolada <- KOLADA %>% 
  filter(Kön == "Alla") %>% 
  filter(Kommun %in% jmfKommun) %>% 
  filter(KPI %in% c("Lärare med pedagogisk högskoleexamen i gymnasieskola, lägeskommun, andel (%)",
                    "Gymnasieelever som uppnått grundläggande behörighet till universitet och högskola inom 4 år, hemkommun, andel (%)",
                    "Gymnasieelever med indraget studiestöd pga. ogiltig frånvaro, hemkommun, andel (%)")
  )

ggplot(df.kolada,aes(x = År, y = Andel, group = Kommun, color = Kommun)) +
  geom_line(alpha = 0.5, linewidth = 0.5) +
  geom_point(alpha = 0.5, size = 1.2) +
  geom_line(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  geom_point(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  ylab("Andel i %") +
  xlab("") +
  facet_wrap(~KPI,
             ncol = 2,
             nrow = 2,
             scales = "free",
             labeller = labeller(KPI = label_wrap_gen(22))) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
:::

### Riskfaktorer

```{r}
DIDareaPlot("Vantrivsel i skolan")
DIDareaPlot2("Vantrivsel i skolan")
DIDline90("Vantrivsel i skolan")
DIDmedelSDg(sums.indexGG, "Vantrivsel i skolan") +
  facet_grid(Årskurs~Kön)
```

### Skyddsfaktorer

::: panel-tabset
#### Åk 9 & Gy 2
```{r}
#| include: false
plotFaktor <- "Positiv skolanknytning"

df.plot <- df %>%
  filter(Kommun == fokusKommun) %>%
  mutate(
    Risknivå = case_when(
      .data[[plotFaktor]] < rslimits.prot |>
        select(plotFaktor) |>
        slice(1) |>
        pull() ~ "Lågt skydd",
      .data[[plotFaktor]] >= rslimits.prot |>
        select(plotFaktor) |>
        slice(1) |>
        pull() &
        .data[[plotFaktor]] < rslimits.prot |>
        select(plotFaktor) |>
        slice(2) |>
        pull() ~ "Neutral",
      .data[[plotFaktor]] >= rslimits.prot |>
        select(plotFaktor) |>
        slice(2) |>
        pull() ~ "Högt skydd",
      TRUE ~ "Otillräckliga svar"
    )
  )

df.plot %>%
  filter(Kön %in% c("Flicka","Pojke")) %>%
  group_by(ar, Kön) %>%
  count(Risknivå) %>%
  mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>%
  mutate(Grupp = factor(Risknivå, levels = c("Högt skydd", "Neutral", 
                                             "Lågt skydd","Otillräckliga svar"))) %>%
  ungroup() %>% 
  ggplot(aes(x = ar, y = Andel)) +
  geom_area(aes(color = Grupp, fill = Grupp), position = "stack") +
  scale_fill_manual(values = c("#00C18D","#F1E755","#F36B00","lightgrey")) +
  scale_color_manual(values = c("#00C18D","#F1E755","#F36B00","lightgrey")) +
  #geom_hline(yintercept = 80, color = "black", linetype = 2, linewidth = 0.66) +
  #geom_hline(yintercept = 20, color = RISEprimRed, linetype = 2, linewidth = 0.66) +
  scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100)) +
  #scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
  xlab("Årtal") +
  ylab("Andel i %") +
  labs(
    title = paste0(plotFaktor, " - ", fokusKommun),
    subtitle = "Uppdelat på kön",
    caption = str_wrap("Grönt fält indikerar andel som överstiger referensvärde för 20% med högst skydd.\nRött fält  indikerar andel som understiger referensvärde för 20% med lägst skydd.")
  ) +
  facet_wrap(~Kön) +
  theme_minimal() +
  theme_rise()
```
```{r}
DIDmedelSDg(sums.indexGG, "Positiv skolanknytning") + 
  facet_grid(Årskurs~Kön)
```


#### Åk 5

Just nu finns det bara data från Skolinspektionen för Stockholm, Vallentuna och Vaxholm.
```{r}
DIDmedelSDg(sums.si, "SkolaPositivSI") +
  facet_wrap(~Kön) +
  ylab("Positiv skolanknytning åk 5")

```
:::

## Närsamhälle

### Riskfaktorer

```{r}
DIDareaPlot("Närsamhälle")
DIDareaPlot2("Närsamhälle")
DIDline90("Närsamhälle")
DIDmedelSDg(sums.indexGG, "Närsamhälle") +
  facet_grid(Årskurs~Kön)
```

### Skyddsfaktorer

## Kamrater och fritid

### Riskfaktorer

### Skyddsfaktorer






### Riskfaktorer

::: panel-tabset
#### 2022

Vi saknar data för Stockholm gällande 2022.
```{r}
DIDradarPlot("2022")
```
#### 2020
```{r}
DIDradarPlot("2020")
```
#### 2018
```{r}
DIDradarPlot("2018")
```
#### 2016
```{r}
DIDradarPlot("2016")
```
:::
