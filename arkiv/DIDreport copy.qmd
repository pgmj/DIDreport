---
title: "Data i dialog"
subtitle: "Kommunrapport"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://www.ri.se/sv/vad-vi-gor/expertiser/kategoriskt-baserade-matningar
  orcid: 0000-0003-1669-592X
date: last-modified
params:
  fokusKommun: "Södertälje"
  jmfKommun: "Stockholm"
  years: 2016
format: 
  html:
    toc: true
    toc-depth: 4
    toc-title: "Innehållsförteckning"
    embed-resources: true
    standalone: true
    page-layout: full
    logo: rise_logo_quarto.png
    mainfont: 'Lato'
    monofont: 'Roboto Mono'
    code-overflow: wrap
    code-tools: false
    code-fold: false
    number-sections: true
    fig-dpi: 150
    layout-align: left
    linestretch: 1.6
    theme: materia
    link-external-newwindow: true
execute:
  echo: false
  warning: false
  message: false
  cache: true
---

## `r params$fokusKommun` {.unnumbered}

```{r}

### Parameters are defined externally in the file DIDparameters.xls
# These are read by the script render.R, which in turn generates reports

# which municipality to focus this report on?
fokusKommun <- params$fokusKommun

# which municipalities should be included in comparisons?
jmfKommun <- c(fokusKommun,params$jmfKommun)

# years of interest
years <- params$years

# setup -------------------------------------------------------------------
library(ggeffects)
library(ggplot2)
library(tidyverse)
library(shiny)
library(arrow)
library(xlsx)

library(ggdist) # for shadeable density slabs
library(gghalves) # for half-half geoms
library(ggpp) # for position_dodge2nudge %>% 
library(colorspace) # for lightening color palettes
library(extrafont) # for Lato, RISE font
library(stringr)
library(EnvStats)
library(bslib)
library(formattable)
library(thematic)
library(catR)
library(Hmisc)

library(geomtextpath)
library(readxl)
library(rlang)
library(visNetwork)
library(networkD3)
library(RColorBrewer)
library(vctrs)
library(ggiraph)
library(gt)
library(gtExtras)
library(RISEkbmRasch)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

### text sizes
ax.size <- 10
title.size <- 12
legend.size <- 10
stript.size <- 10
årtal <- c(2006,2008,2010,2012,2014,2016,2018,2020,2022)


### set up color palette based on RISE guidelines
RISEprimGreen <- "#009ca6"
RISEprimRed <- "#e83c63"
RISEprimYellow <- "#ffe500"
RISEprimGreenMid <- "#8dc8c7"
RISEprimRedMid <- "#f5a9ab"
RISEprimYellowMid <- "#ffee8d"
RISEprimGreenLight <- "#ebf5f0"
RISEprimRedLight <- "#fde8df"
RISEprimYellowLight <- "#fff7dd"
RISEcompPurple <- "#482d55"
RISEcompGreenDark <- "#0e4e65"
RISEgrey1 <- "#f0f0f0"
RISEgrey2 <- "#c8c8c8"
RISEgrey3 <- "#828282"
RISEgrey4 <- "#555555"

### colors specifically for DID application
DIDcolorsOriginal <- c('#D55E00','#F0E442','#009E73','#999999')
DIDcolors <- lighten(DIDcolorsOriginal, amount = 0.1, space = "HLS")
DIDred <- "#D55E00"
DIDorange <- "#E69F00"
DIDgreen <- "#009E73"
DIDyellow <- "#F0E442"

DIDtestColors <- c("#509B8E","#E2C578","#DB7358")

RISEpalette1 <- colorRampPalette(colors = c("#009ca6", "#e83c63", "#ffe500"))(6)
#scales::show_col(RISEpalette1)

RISEpalette2 <- colorRampPalette(colors = c("#009ca6", "#482d55", "#e83c63", "#ffe500"))(8)
#scales::show_col(RISEpalette2)

# distance between panels in faceted ggplots
pandist <- 0.6

rfactors <- c('Utagerande','Närsamhälle','Föräldraskap','Psykiska/ psykosomatiska besvär','Vantrivsel i skolan')
pfactors <- c('Välbefinnande','Positiv skolanknytning')

```

```{r}
# read data

# Import data -------------------------------------------------------------

## Stockholmsenkäten --------------------------------------
df <- read_parquet("../DIDapp/data/2023-01-23_ScoredRev.parquet")
df <- df %>%
 rename(Kommun = DIDkommun)

df <- df %>% 
  filter(Kommun %in% jmfKommun)

# remove data from before 2006 for Södertälje, due to lack of comparisons
df <- df %>% 
  filter(!ar < 2006)

# define demographic variables of interest
demogr.vars<-read.csv("../DIDapp/data/SthlmsEnk_demographicVariables.csv")
demogr.vars <- demogr.vars$demogr.vars

# final set of items based on psychometric analyses
itemlabels.final <- read_excel("../DIDapp/data/SthlmsEnk_allItemInfo_2022-12-06.xls") %>% 
  select(itemnr,item,Index)

# list of all items included in analyses (even those discarded)
allitems <- read.csv("../DIDapp/data/SthlmsEnk_allitems.csv")

# list of item responses for Psykiska/ psykosomatiska besvär, for use in the "persona" visualization
itemresponses <- read.xlsx("../DIDapp/data/SthlmsEnk_04psfRespCats.xls", sheetName = "04psf")

# create vector with all index names
sthlm.index <- itemlabels.final %>% 
  distinct(Index) %>% 
  pull()

## Skolinspektionen --------------------------------------------------------

# read data from processed file with Rasch based scores
#df.si <- read_parquet("../../DIDapp/data/SkolinspÅk5Scored.parquet")
# this data is also based on higher score = higher risk

# some functions are based on the SthlmsEnkät labeling of year as "ar"
# we add a duplicate year variable
# df.si <- df.si %>% 
#   mutate(ar = as.numeric(as.character(År)),
#          ar = vec_cast(ar, double()))
# 
# # read item info
# si.items <- read_csv("../../DIDapp/data/SkolinspFinalItems.csv")
# note that all SI items have merged the top 3 response categories (top = highest risk)

# Cutoff values SthlmsEnk -------------------------------------------------------------

# percentiles based on 2006-2020 data for all of Stockholm Stad (~ 110k responses)
# each year's 70th and 90th percentile value was used to calculate an average (not weighted in any way)
# see script "file 04 Distributions and risk limits.R" in https://github.com/pgmj/sthlmsenk/tree/main/OtherScripts
#rslimits <- read.csv("../../DIDapp/data/SthlmsEnk_rslimitsNoRev2022-12-06.csv")
rslimits <- read_csv("../DIDapp/data/2023-01-17_rslimitsRisk.csv")

# read cutoffs for protective factors
#rslimits.prot <- read_csv("data/2022-12-16_protective.csv")
rslimits.prot <- read_csv("../DIDapp/data/2023-01-17_rslimitsProt.csv")

rslimits <- cbind(rslimits,rslimits.prot)
rslimits <- rslimits %>% 
  relocate(SkolaPositiv, .after = SkolaNegativ)

# for Skolinspektionen ÅK5
#rslimits.si <- read_csv("../../DIDapp/data/SkolinspRSlimitsNoRev.csv")
#rslimits$`Positiv skolanknytning åk 5` <- rslimits.si$`Positiv skolanknytning`

```
```{r}
# preprocess data
source("setupDIDreport.R")
# import functions to create figures and tables
source("DIDreportFunctions.R")
```

## Demografi

För att se exakta antal i figurerna går det att använda muspekaren på respektive punkt.

::: panel-tabset
### Fördelat på kön
```{r}
responsesGender <- df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kön) %>% 
  reframe(Antal = n()) %>% 
  ggplot(aes(x = År, y = Antal, color = Kön)) + 
  geom_line(linewidth = 1) +
  geom_point_interactive(aes(tooltip = Antal),
                         size = 2.5) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  scale_x_continuous(guide = guide_axis(n.dodge = 1), breaks = årtal) +
  scale_y_continuous(limits = c(0,NA)) +
  labs(title = "Antal respondenter per år",
       subtitle = "Fördelat på kön") +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

girafe(ggobj = responsesGender)

```
### Fördelat på årskurs
```{r}
responsesARSKURS <- df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Årskurs) %>% 
  reframe(Antal = n()) %>% 
  ggplot(aes(x = År, y = Antal, color = Årskurs)) + 
  geom_line(linewidth = 1) +
  geom_point_interactive(aes(tooltip = Antal),
                         size = 2.5) +
  #scale_color_brewer(type = "qual", palette = "Dark2") +
  scale_x_continuous(guide = guide_axis(n.dodge = 1), breaks = årtal) +
  scale_y_continuous(limits = c(0,NA)) +
  labs(title = "Antal respondenter per år",
       subtitle = "Fördelat på årskurs") +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

girafe(ggobj = responsesARSKURS)

```
### Otillräckliga svar
Det krävs svar på minst 5 frågor inom ett index för att ett indexvärde ska beräknas. Här redovisas hur stor andel av de som svarat på Stockholmsenkäten som har 0-4 frågor besvarade inom varje index.
```{r}
otillr <- df.risk %>%
  filter(is.na(riskLevel)) %>%
  filter(Kommun == fokusKommun) %>%
  ggplot(aes(x = År, y = Andel, group = Index, color = Index)) +
  geom_line(linewidth = 0.8) +
  geom_point_interactive(aes(tooltip = Andel),
                         size = 2.5) +
  ylab("Andel i %") +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))

girafe(ggobj = otillr)

```
### Tabeller
```{r}
#| layout-ncol: 2
#| include: true
#| 

df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kön) %>% 
  reframe(`Antal respondenter` = n()) %>% 
  gt(.,
   groupname_col = "År") %>% 
  gt_theme_espn() %>% 
  tab_options(table.font.name = "Lato",
              heading.align = "left") %>% 
  cols_align(align = "right")

df %>% 
  filter(Kommun == fokusKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kön,Årskurs) %>% 
  reframe(`Antal respondenter` = n()) %>% 
  gt(.,
   groupname_col = c("År","Årskurs")) %>% 
  gt_theme_espn() %>% 
  tab_options(table.font.name = "Lato",
              heading.align = "left") %>% 
  cols_align(align = "right",
             columns = "Kön")
```
:::

## Samtliga riskfaktorer, per år

:::: column-page-inset-left
::: panel-tabset
### 2022
```{r}
DIDsnirkel("2022")
```
### 2020
```{r}
DIDsnirkel("2020")
```
### 2018
```{r}
DIDsnirkel("2018")
```
### 2016
```{r}
DIDsnirkel("2016")
```
### 2014
```{r}
#DIDsnirkel("2014")
```
### Samlade
```{r}

# snirkelplot
#years <- c(2012,2014,2016,2018,2020,2022)

df.risk %>%
  #filter(!riskLevel == "NA") %>%
  filter(Kommun == fokusKommun) %>%
  filter(År %in% years) %>%
  filter(!Index %in% c("Välbefinnande", "Positiv skolanknytning")) %>%
    mutate(riskLevel = car::recode(riskLevel,"NA='För få svar';
                                   'Medelhög risk'='Något förhöjd risk';
                                   'Hög risk'='Förhöjd risk'")) %>% 
    mutate(Risknivå = factor(riskLevel, levels = c("För få svar", "Låg risk", "Något förhöjd risk", "Förhöjd risk"))) %>% # remove NA?
    ggplot(aes(x = Index, y = Andel, fill = Risknivå)) +
    geom_col() +
    geom_textpath(aes(label = Index, group = Index),
                  text_only = T,
                  position = "stack",
                  hjust = 0,
                  size = 2
    ) +
    coord_polar(theta = "y") +
    scale_fill_manual(values = lighten(c("lightgrey","#009E73", "#F0E442", "#D55E00"),
                                       amount = 0.1, space = "HLS")) +
  theme_bw() +
  scale_x_discrete(
    expand = expansion(add = c(3, 0)),
    limits = rev,
    labels = NULL
  ) +
  scale_y_continuous(
    breaks = seq(0, 90, 10),
    labels = paste0(seq(0, 90, 10), "%"),
    limits = c(0, 100)
  ) +
  labs(title = paste0(fokusKommun)) +
  geom_texthline(
    yintercept = 10, color = "black",
    linetype = 2, size = 1, alpha = 0.6,
    label = "Hög risk",
    hjust = 0.05
  ) +
  geom_texthline(
    yintercept = 30, color = RISEprimRed,
    linetype = 2, size = 1, alpha = 0.6,
    label = "Medelhög risk",
    hjust = 0.15
  ) +
  theme(
    axis.text.x = element_text(size = ax.size-3, family = "sans"),
    axis.text.y = element_text(size = ax.size-3, family = "sans"),
    title = element_text(size = title.size),
    legend.text = element_text(size = legend.size),
    strip.text.x = element_text(size = stript.size),
    panel.spacing = unit(pandist, "cm", data = NULL)
  ) +
  xlab("") +
  ylab("") +
  facet_wrap(~År) +
  theme_minimal() +
  theme_rise() +
  theme(text = element_text(family = "Lato"))
```
:::
::::

## Samtliga riskfaktorer, per år (stapel)

:::: column-page-inset-left
::: panel-tabset
### 2022
```{r}
DIDstapel("2022")
```
### 2020
```{r}
DIDstapel("2020")
```
### 2018
```{r}
DIDstapel("2018")
```
### 2016
```{r}
DIDstapel("2016")
```
:::
::::
## Riskfaktorer över tid, uppdelat på kön

::: panel-tabset
### Utagerande
```{r}
DIDareaPlot("Utagerande")
```
### Psykiska/psykosomatiska besvär
```{r}
DIDareaPlot("Psykiska/ psykosomatiska besvär")
```
### Föräldraskap
```{r}
DIDareaPlot("Föräldraskap")
```
### Vantrivsel i skolan
```{r}
DIDareaPlot("Vantrivsel i skolan")
```
### Närsamhälle
```{r}
DIDareaPlot("Närsamhälle")
```
:::

## Riskfaktorer över tid, uppdelat på årskurs

::: panel-tabset
### Utagerande
```{r}
DIDareaPlot2("Utagerande")
```
### Psykiska/psykosomatiska besvär
```{r}
DIDareaPlot2("Psykiska/ psykosomatiska besvär")
```
### Föräldraskap
```{r}
DIDareaPlot2("Föräldraskap")
```
### Vantrivsel i skolan
```{r}
DIDareaPlot2("Vantrivsel i skolan")
```
### Närsamhälle
```{r}
DIDareaPlot2("Närsamhälle")
```
:::

```{r}
#| include: false
### Tabell psykiska/psykosomatiska besvär åk 9

  plotFaktor <- "Psykiska/ psykosomatiska besvär"
  df.plot <- df %>%
    filter(Kommun == fokusKommun) %>%
    mutate(
      Risknivå = case_when(
        .data[[plotFaktor]] < rslimits |>
          select(plotFaktor) |>
          slice(1) |>
          pull() ~ "Låg risk",
        .data[[plotFaktor]] >= rslimits |>
          select(plotFaktor) |>
          slice(1) |>
          pull() &
          .data[[plotFaktor]] < rslimits |>
            select(plotFaktor) |>
            slice(2) |>
            pull() ~ "Något förhöjd risk",
        .data[[plotFaktor]] >= rslimits |>
          select(plotFaktor) |>
          slice(2) |>
          pull() ~ "Förhöjd risk",
        TRUE ~ "Otillräckliga svar"
      )
    )

## Table for all years and ARSKURS
#   df.plot %>%
#     filter(Kön %in% c("Pojke", "Flicka")) %>%
#     #filter(ar %in% c()) %>% # allow selection of span of years?
#     mutate(Risknivå = factor(Risknivå, levels = c("Förhöjd risk", "Något förhöjd risk", "Låg risk", "Otillräckliga svar"))) %>%
#     group_by(ar, Kön, ARSKURS) %>%
#     count(Risknivå, .drop = FALSE) %>%
#     mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>% 
#     rename(Antal = n) %>% 
#     gt(.,
#    groupname_col = c("ar","ARSKURS","Kön")) %>% 
#   gt_theme_espn() %>% 
#   tab_options(table.font.name = "Lato",
#               container.width = 500,
#               heading.align = "left") %>% 
#   cols_align(align = "right")
  
    df.plot %>%
    filter(Kön %in% c("Pojke", "Flicka")) %>%
    filter(ar %in% c(2010,2016,2020,2022)) %>% # allow selection of span of years?
    filter(ARSKURS == "Åk 9") %>% 
    mutate(Risknivå = factor(Risknivå, levels = c("Förhöjd risk", "Något förhöjd risk", "Låg risk", "Otillräckliga svar"))) %>%
    group_by(ar, Kön) %>%
    count(Risknivå, .drop = FALSE) %>%
    mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>% 
    rename(Antal = n) %>% 
    gt(.,
   groupname_col = c("ar","Kön")) %>% 
  gt_theme_espn() %>% 
  tab_options(table.font.name = "Lato",
              container.width = 500,
              heading.align = "left") %>% 
  cols_align(align = "right")
  
```



## Välbefinnande

::: panel-tabset
### Medelvärden
```{r}

```


### Grupperat
```{r}

plotFaktor <- "Välbefinnande"

df.plot <- df %>%
      filter(Kommun == fokusKommun) %>%
      mutate(
        Risknivå = case_when(
          .data[[plotFaktor]] < rslimits.prot |>
            select(plotFaktor) |>
            slice(1) |>
            pull() ~ "20% lägst",
          .data[[plotFaktor]] >= rslimits.prot |>
            select(plotFaktor) |>
            slice(1) |>
            pull() &
            .data[[plotFaktor]] < rslimits.prot |>
            select(plotFaktor) |>
            slice(2) |>
            pull() ~ "Normal nivå",
          .data[[plotFaktor]] >= rslimits.prot |>
            select(plotFaktor) |>
            slice(2) |>
            pull() ~ "20% högst",
          TRUE ~ "Otillräckliga svar"
        )
      )
    
    df.plot %>%
      filter(Kön %in% c("Flicka","Pojke")) %>%
      #filter(!Risknivå == "Otillräckliga svar") %>% 
      group_by(ar, Kön) %>%
      count(Risknivå) %>%
      mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>%
      mutate(Grupp = factor(Risknivå, levels = c("20% högst", "Normal nivå", 
                                                    "20% lägst","Otillräckliga svar"))) %>%
      ungroup() %>% 
      ggplot(aes(x = ar, y = Andel)) +
      geom_area(aes(color = Grupp, fill = Grupp), position = "stack") +
      scale_fill_manual(values = c("#00C18D","#F1E755","#F36B00","lightgrey")) +
      scale_color_manual(values = c("#00C18D","#F1E755","#F36B00","lightgrey")) +
      #geom_hline(yintercept = 80, color = "black", linetype = 2, linewidth = 0.66) +
      #geom_hline(yintercept = 20, color = RISEprimRed, linetype = 2, linewidth = 0.66) +
      scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100)) +
      #scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
      xlab("Årtal") +
      ylab("Andel i %") +
      labs(
        title = paste0(plotFaktor, " - ", fokusKommun),
        subtitle = "Uppdelat på kön",
        caption = str_wrap("Grönt fält = Andel som överstiger referensvärde för 20% med högst välbefinnande.\nRött fält indikerar andel som understiger referensvärde för 20% med lägst välbefinnande.")
      ) +
      facet_wrap(~Kön) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
### Kontinuerlig skala
```{r}

plotFaktor <- "Välbefinnande"

df.plot <- df %>%
      filter(Kommun == fokusKommun) %>%
      select(plotFaktor, Kommun, ar) %>%
      rename(RSfaktor = plotFaktor,
             År = ar)

    ggplot(df.plot, aes(x = RSfaktor, y = factor(År), fill = År)) + # make plot, with fill color by year
      stat_slab(aes(fill_ramp = after_stat(level), fill = År),
        side = "right", show.legend = F,
        scale = 0.6, # defines the height that a slab can reach
        position = position_dodge(width = .6), # distance between elements for dodging
        .width = c(.50, .90, 1)
      ) + 
      stat_summary(
        fun.data = "mean_cl_normal",
        show.legend = F,
        size = .4,
        position = position_dodge2nudge(x = .05, width = .8)
      ) +
      xlab("") +
      ylab("") +
      labs(
        title = paste0(plotFaktor),
        caption = str_wrap("Pricken visar medelvärde. Fältet i mitten visar 50% av respondenterna, medan nästa fält visar 90% av respondenterna.")
      ) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
### Box- & violinplots
```{r}
df.plot <- df %>%
      #filter(ar == input$year2) %>% # filter the year selected
      # filter(Kön %in% input$gender) %>%  # and gender(s) selected
      filter(Kommun == fokusKommun,
             !Kön == "<NA>") %>%
      select(plotFaktor, Kommun, ar, Kön) %>%
      rename(RSfaktor = plotFaktor,
             År = ar)
ggplot(df.plot, aes(y = RSfaktor, x = factor(År))) +
  geom_violin(alpha = 1, aes(fill = Kön)) +
  geom_boxplot(alpha = 0.4, width = 0.6, outlier.shape = NA, notch = TRUE) +
  scale_fill_brewer(type = "qual", palette = "Dark2") +
  xlab("Årtal") +
  ylab("Välbefinnande") +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
:::



## Positiv skolanknytning över tid

::: panel-tabset
### Grupperat
```{r}

plotFaktor <- "Positiv skolanknytning"

df.plot <- df %>%
      filter(Kommun == fokusKommun) %>%
      mutate(
        Risknivå = case_when(
          .data[[plotFaktor]] < rslimits.prot |>
            select(plotFaktor) |>
            slice(1) |>
            pull() ~ "Lågt skydd",
          .data[[plotFaktor]] >= rslimits.prot |>
            select(plotFaktor) |>
            slice(1) |>
            pull() &
            .data[[plotFaktor]] < rslimits.prot |>
            select(plotFaktor) |>
            slice(2) |>
            pull() ~ "Neutral",
          .data[[plotFaktor]] >= rslimits.prot |>
            select(plotFaktor) |>
            slice(2) |>
            pull() ~ "Högt skydd",
          TRUE ~ "Otillräckliga svar"
        )
      )
    
    df.plot %>%
      filter(Kön %in% c("Flicka","Pojke")) %>%
      #filter(!Risknivå == "Otillräckliga svar") %>% 
      group_by(ar, Kön) %>%
      count(Risknivå) %>%
      mutate(Andel = (100 * n / sum(n)) %>% round(digits = 1)) %>%
      mutate(Grupp = factor(Risknivå, levels = c("Högt skydd", "Neutral", 
                                                    "Lågt skydd","Otillräckliga svar"))) %>%
      ungroup() %>% 
      ggplot(aes(x = ar, y = Andel)) +
      geom_area(aes(color = Grupp, fill = Grupp), position = "stack") +
      scale_fill_manual(values = c("#00C18D","#F1E755","#F36B00","lightgrey")) +
      scale_color_manual(values = c("#00C18D","#F1E755","#F36B00","lightgrey")) +
      #geom_hline(yintercept = 80, color = "black", linetype = 2, linewidth = 0.66) +
      #geom_hline(yintercept = 20, color = RISEprimRed, linetype = 2, linewidth = 0.66) +
      scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100)) +
      #scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
      xlab("Årtal") +
      ylab("Andel i %") +
      labs(
        title = paste0(plotFaktor, " - ", fokusKommun),
        subtitle = "Uppdelat på kön",
        caption = str_wrap("Grönt fält indikerar andel som överstiger referensvärde för 20% med högst skydd.\nRött fält  indikerar andel som understiger referensvärde för 20% med lägst skydd.")
      ) +
      facet_wrap(~Kön) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
### Kontinuerlig skala
```{r}

plotFaktor <- "Positiv skolanknytning"

df.plot <- df %>%
      filter(Kommun == fokusKommun) %>%
      select(plotFaktor, Kommun, ar) %>%
      rename(RSfaktor = plotFaktor,
             År = ar)

    ggplot(df.plot, aes(x = RSfaktor, y = factor(År), fill = År)) + # make plot, with fill color by year
      stat_slab(aes(fill_ramp = after_stat(level), fill = År),
        side = "right", show.legend = F,
        scale = 0.6, # defines the height that a slab can reach
        position = position_dodge(width = .6), # distance between elements for dodging
        .width = c(.50, .90, 1)
      ) + 
      stat_summary(
        fun.data = "mean_cl_normal",
        show.legend = F,
        size = .4,
        position = position_dodge2nudge(x = .05, width = .8)
      ) +
      theme(
        axis.text.x = element_text(size = ax.size, family = "sans"),
        axis.text.y = element_text(size = ax.size, family = "sans"),
        title = element_text(size = title.size),
      ) +
      xlab("") +
      ylab("") +
      labs(
        title = paste0(plotFaktor),
        caption = str_wrap("Pricken visar medelvärde. Fältet i mitten visar 50% av respondenterna, medan nästa fält visar 90% av respondenterna.")
      ) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
### Box- & violinplots
```{r}
df.plot <- df %>%
      #filter(ar == input$year2) %>% # filter the year selected
      # filter(Kön %in% input$gender) %>%  # and gender(s) selected
      filter(Kommun == fokusKommun,
             !Kön == "<NA>") %>%
      select(plotFaktor, Kommun, ar, Kön) %>%
      rename(RSfaktor = plotFaktor,
             År = ar)
ggplot(df.plot, aes(y = RSfaktor, x = factor(År))) +
  geom_violin(alpha = 1, aes(fill = Kön)) +
  geom_boxplot(alpha = 0.4, width = 0.6, outlier.shape = NA, notch = TRUE) +
  scale_fill_brewer(type = "qual", palette = "Dark2") +
  xlab("Årtal") +
  ylab("Välbefinnande") +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
:::

## KOLADA
```{r}
KOLADA <- read_parquet("../../data/2023-01-10_koladaData.parquet")

# which KPI's to remove?
removed.kpi <- c("N17473","N15613","N15643","N17620")
# set which are available in app
kpiChoices <- KOLADA %>% 
  filter(!kpi %in% removed.kpi) %>% 
  arrange(kpi) %>% 
  distinct(KPI) %>% 
  pull()

```


::: panel-tabset
### Förskola
```{r}

df.kolada <- KOLADA %>% 
  filter(Kön == "Alla") %>% 
  filter(Kommun %in% jmfKommun) %>% 
  filter(KPI %in% c("Barn 3-5 år inskrivna i förskola, andel (%)",
                    "Heltidstjänster i förskolan med förskollärarexamen, lägeskommun, andel (%)")
  )

ggplot(df.kolada,aes(x = År, y = Andel, group = Kommun, color = Kommun)) +
  geom_line(alpha = 0.5, 
            linewidth = 0.8) +
  geom_point(alpha = 0.5, 
             size = 2) +
  geom_line(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  geom_point(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  facet_wrap(~KPI,
             ncol = 4,
             scales = "free",
             labeller = labeller(KPI = label_wrap_gen(25))) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
### Grundskola
```{r}
#| fig-height: 8
df.kolada <- KOLADA %>% 
  filter(Kön == "Alla") %>% 
  filter(Kommun %in% jmfKommun) %>% 
  filter(KPI %in% c("Lärare med pedagogisk högskoleexamen i grundskola åk 1-9, lägeskommun, andel (%)",
                    "Lärare (heltidstjänster) med lärarlegitimation och behörighet i minst ett ämne i grundskola åk 1-9, lägeskommun, andel (%)",
                    "Elever i åk 9 som är behöriga till yrkesprogram, hemkommun, andel (%)")
  )

ggplot(df.kolada,aes(x = År, y = Andel, group = Kommun, color = Kommun)) +
  geom_line(alpha = 0.5, linewidth = 0.8) +
  geom_point(alpha = 0.5, size = 2) +
  geom_line(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  geom_point(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  ylab("Andel i %") +
  xlab("") +
  facet_wrap(~KPI,
             ncol = 2,
             nrow = 2,
             scales = "free",
             labeller = labeller(KPI = label_wrap_gen(22))) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
### Gymnasie
```{r}
#| fig-height: 8
df.kolada <- KOLADA %>% 
  filter(Kön == "Alla") %>% 
  filter(Kommun %in% jmfKommun) %>% 
  filter(KPI %in% c("Lärare med pedagogisk högskoleexamen i gymnasieskola, lägeskommun, andel (%)",
                    "Gymnasieelever som uppnått grundläggande behörighet till universitet och högskola inom 4 år, hemkommun, andel (%)",
                    "Gymnasieelever med indraget studiestöd pga. ogiltig frånvaro, hemkommun, andel (%)")
  )

ggplot(df.kolada,aes(x = År, y = Andel, group = Kommun, color = Kommun)) +
  geom_line(alpha = 0.5, linewidth = 0.5) +
  geom_point(alpha = 0.5, size = 1.2) +
  geom_line(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  geom_point(data = filter(df.kolada, Kommun == fokusKommun), alpha = 1) +
  scale_x_continuous(guide = guide_axis(n.dodge = 2)) +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  ylab("Andel i %") +
  xlab("") +
  facet_wrap(~KPI,
             ncol = 2,
             nrow = 2,
             scales = "free",
             labeller = labeller(KPI = label_wrap_gen(22))) +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )
```
:::

## Jämförelser med andra kommuner

### Antal svar över tid
```{r}
responsesKommuner <- df %>% 
  filter(Kommun %in% jmfKommun,
         !Kön == "<NA>") %>% 
  rename(År = ar,
         Årskurs = ARSKURS) %>% 
  group_by(År,Kommun) %>% 
  reframe(Antal = n()) %>% 
  ggplot(aes(x = År, y = Antal, group = Kommun, color = Kommun)) + 
  geom_line(linewidth = 1) +
  geom_point_interactive(aes(tooltip = Antal),
                         size = 2.5) +
  scale_color_brewer(type = "qual", palette = "Dark2") +
  scale_x_continuous(guide = guide_axis(n.dodge = 1), breaks = årtal) +
  scale_y_continuous(limits = c(0,2000)) +
  labs(title = "Antal respondenter per år",
       subtitle = "Fördelat på kommun") +
  theme_minimal() +
  theme_rise() +
    theme(text = element_text(family = "Lato"),
      axis.text.x = element_text(size = ax.size),
      axis.text.y = element_text(size = ax.size),
      title = element_text(size = title.size),
      legend.text = element_text(size = legend.size),
      strip.text.x = element_text(size = 13),
      panel.spacing = unit(pandist, "cm", data = NULL)
    )

girafe(ggobj = responsesKommuner)

```


### Riskfaktorer

::: panel-tabset
#### 2022

Vi saknar data för Stockholm gällande 2022.
```{r}
DIDradarPlot("2022")
```
#### 2020
```{r}
DIDradarPlot("2020")
```
#### 2018
```{r}
DIDradarPlot("2018")
```
#### 2016
```{r}
DIDradarPlot("2016")
```
:::

### Medelvärden över tid

::: panel-tabset
#### Utagerande
```{r}
DIDmedelSD("Utagerande")
```
#### Psykiska/psykosomatiska besvär
```{r}
DIDmedelSD("Psykiska/ psykosomatiska besvär")
```
#### Föräldraskap
```{r}
DIDmedelSD("Föräldraskap")
```
#### Vantrivsel i skolan
```{r}
DIDmedelSD("Vantrivsel i skolan")
```
#### Närsamhälle
```{r}
DIDmedelSD("Närsamhälle")
```
:::

### Medelvärden över tid uppdelat på kön

::: panel-tabset
#### Utagerande
```{r}
DIDmedelSDg("Utagerande")
```
#### Psykiska/psykosomatiska besvär
```{r}
DIDmedelSDg("Psykiska/ psykosomatiska besvär")
```
#### Föräldraskap
```{r}
DIDmedelSDg("Föräldraskap")
```
#### Vantrivsel i skolan
```{r}
DIDmedelSDg("Vantrivsel i skolan")
```
#### Närsamhälle
```{r}
DIDmedelSDg("Närsamhälle")
```
:::

### Högrisk över tid

::: panel-tabset
#### Utagerande
```{r}
DIDline90("Utagerande")
```
#### Psykiska/psykosomatiska besvär
```{r}
DIDline90("Psykiska/ psykosomatiska besvär")
```
#### Föräldraskap
```{r}
DIDline90("Föräldraskap")
```
#### Vantrivsel i skolan
```{r}
DIDline90("Vantrivsel i skolan")
```
#### Närsamhälle
```{r}
DIDline90("Närsamhälle")
```
:::

